#!/usr/bin/env bash

APP=avidemux
mkdir tmp;
cd ./tmp;

# DOWNLOADING THE DEPENDENCIES
wget -q $(wget -q https://api.github.com/repos/probonopd/go-appimage/releases -O - | grep -v zsync | grep -i continuous | grep -i appimagetool | grep -i x86_64 | grep browser_download_url | cut -d '"' -f 4 | head -1) -O appimagetool
wget https://raw.githubusercontent.com/ivan-hc/AM-application-manager/main/tools/pkg2appimage
chmod a+x ./appimagetool ./pkg2appimage

# BUILD THE APPDIR
echo "app: avidemux
binpatch: true
ingredients:
  dist: stable
  sources:
    - deb https://www.deb-multimedia.org testing main non-free
    - deb http://deb.debian.org/debian/ stable main contrib non-free" >> recipe.yml
./pkg2appimage recipe.yml

rm ./$APP/$APP.AppDir/AppRun

cp ./$APP/$APP.AppDir/usr/share/icons/hicolor/22x22/apps/* ./$APP/$APP.AppDir/ 2>/dev/null
cp ./$APP/$APP.AppDir/usr/share/icons/hicolor/24x24/apps/* ./$APP/$APP.AppDir/ 2>/dev/null
cp ./$APP/$APP.AppDir/usr/share/icons/hicolor/32x32/apps/* ./$APP/$APP.AppDir/ 2>/dev/null
cp ./$APP/$APP.AppDir/usr/share/icons/hicolor/48x48/apps/* ./$APP/$APP.AppDir/ 2>/dev/null
cp ./$APP/$APP.AppDir/usr/share/icons/hicolor/64x64/apps/* ./$APP/$APP.AppDir/ 2>/dev/null
cp ./$APP/$APP.AppDir/usr/share/icons/hicolor/128x128/apps/* ./$APP/$APP.AppDir/ 2>/dev/null
cp ./$APP/$APP.AppDir/usr/share/icons/hicolor/256x256/apps/* ./$APP/$APP.AppDir/ 2>/dev/null
cp ./$APP/$APP.AppDir/usr/share/icons/hicolor/512x512/apps/* ./$APP/$APP.AppDir/ 2>/dev/null
cp ./$APP/$APP.AppDir/usr/share/icons/hicolor/scalable/apps/* ./$APP/$APP.AppDir/ 2>/dev/null

cat >> ./$APP/$APP.AppDir/AppRun << 'EOF'
#!/bin/bash
OPENGL_NAME="libGL.so.1"
PULSE_NAME="libpulse-simple.so.0"
LIBVA_NAME="libva.so.2"
LIBVDPAU_NAME="libvdpau.so.1"
if ! (/sbin/ldconfig -p | grep -q ${OPENGL_NAME})
then
    echo "Legacy OpenGL library (${OPENGL_NAME}) not found on host, aborting."
    exit 1
fi
if ! (/sbin/ldconfig -p | grep -q ${PULSE_NAME})
then
    echo "PulseAudio Simple API library (${PULSE_NAME}) not found on host, aborting."
    exit 1
fi
# make relative-path arguments absolute before changing directory
args=("--portable");
paramprefix="--";
param="--load";#enable filename as first/single argument, with --load as supposed default action
for arg in "$@";
do # add argument as is, or realpath of argument, depending on paramprefix
	[ "${arg::2}" = "$paramprefix" ] && args+=("$arg") && param="$arg" || {
		case "$param" in
		--append|--load|--run|--save*)
			args+=("$(realpath -- "$arg")") ;;
		*)
			args+=("$arg") ;;
		esac
	}
	[ "$arg" == "$paramprefix" ] && paramprefix="123" && param="--load"; # new paramprefix will never match length-2 string again
done;
HERE="$(dirname "$(readlink -f "${0}")")"
cd "${HERE}/usr/"
#export QT_STYLE_OVERRIDE="fusion"
FT_PROBE_EXE_NAME="freetype_probe"
if [ -z "${ADM_APPIMAGE_USE_SYSTEM_FONT_LIBS}" ] && [ -e "${HERE}/${FT_PROBE_EXE_NAME}" ]; then
    "${HERE}/${FT_PROBE_EXE_NAME}"
    ADM_APPIMAGE_USE_SYSTEM_FONT_LIBS=$?
fi
if [ "x${ADM_APPIMAGE_USE_SYSTEM_FONT_LIBS}" != "x1" ]
then
    echo "Using bundled freetype, fontconfig and fribidi." \
         "Export ADM_APPIMAGE_USE_SYSTEM_FONT_LIBS=1 to use the system ones instead."
    echo "This is recommended for systems with fontconfig >= 2.13"
    LD_LIBRARY_PATH="${HERE}/opt/lib:${LD_LIBRARY_PATH}"
else
    echo "Using system freetype, fontconfig and fribidi."
fi
if (/sbin/ldconfig -p | grep -q ${LIBVA_NAME})
then
    echo "Using system libva."
else
    echo "${LIBVA_NAME} not found on host, using bundled version."
    LD_LIBRARY_PATH="${HERE}/usr/lib/va:${LD_LIBRARY_PATH}"
fi
if (/sbin/ldconfig -p | grep -q ${LIBVDPAU_NAME})
then
    echo "Using system libvdpau."
else
    echo "${LIBVDPAU_NAME} not found on host, using bundled version."
    LD_LIBRARY_PATH="${HERE}/usr/lib/vdpau:${LD_LIBRARY_PATH}"
fi
export LD_LIBRARY_PATH="${HERE}/usr/lib/:${HERE}/usr/lib/qt5:${LD_LIBRARY_PATH}"
export PATH="${HERE}/usr/bin:${PATH}"
# choose binary depending on substrings "_jobs" or "_cli" in the name appImage is called by
if [[ "${ARGV0##*/}" =~ _jobs ]]
then "${HERE}/usr/bin/avidemux3_jobs_qt5" "${args[@]}"
elif [[ "${ARGV0##*/}" =~ _cli ]]
then "${HERE}/usr/bin/avidemux3_cli" "${args[@]}"
else "${HERE}/usr/bin/avidemux3_qt5" "${args[@]}"
fi
cd -
EOF
chmod a+x ./$APP/$APP.AppDir/AppRun

ARCH=x86_64 VERSION=$(./appimagetool -v | grep -o '[[:digit:]]*') ./appimagetool -s ./$APP/$APP.AppDir
cd ..
mv ./tmp/Avidemux*AppImage ./
